shiny::runApp()
runApp()
runApp()
runApp()
runApp()
require(rgdal)
require(leaflet)
require(leaflet.extras)
require(dplyr)
require(readxl)
require(stringr)
require(raptr)
require(PBSmapping)
require(ggplot2)
require(plotly)
library(knitr)
# Load FL eviction data. Source: https://data-downloads.evictionlab.org/
FL_counties <- readOGR("FL_eviction_counties.geojson")
FL_16 <- FL_counties
# Load FL eviction data. Source: https://data-downloads.evictionlab.org/
FL_counties <- readOGR("FL_eviction_counties.geojson")
FL_16 <- FL_counties
# Select only 2016 data and rename columns
FL_16@data <- FL_counties@data %>%
dplyr::select(GEOID, west, east, north, south, n, pl, ends_with("16")) %>%
rename(county = n, state = pl)
colnames(FL_16@data) <- c("GEOID", "west", "east", "north", "south", "county", "state",
"population", "poverty_rate", "renter_occ_households", "pct_renter",
"median_gross_rent", "median_income", "median_property_val",
"rent_burden", "pct_white", "pct_af_am", "pct_hispanic", "pct_am_ind",
"pct_asian", "pct_nh", "pct_multiple", "pct_other",
"eviction_filings", "evictions", "eviction_rate", "evic_filing_rate",
"low_flag", "imputed", "sub")
#View(FL_16@data)
colnames(FL_16@data) <- c("GEOID", "west", "east", "north", "south", "county", "state",
"population", "poverty_rate", "renter_occ_households", "pct_renter",
"median_gross_rent", "median_income", "median_property_val",
"rent_burden", "pct_white", "pct_af_am", "pct_hispanic", "pct_am_ind",
"pct_asian", "pct_nh", "pct_multiple", "pct_other",
"eviction_filings", "evictions", "eviction_rate", "evic_filing_rate",
"low_flag", "imputed", "sub")
# Add lat and long to the dataset
# Calculate centroids of counties to find lat and long
FL_polyset <- SpatialPolygons2PolySet(x = FL_16)
centroid <- calcCentroid(FL_polyset, rollup = 1) %>%
rename(lat = Y, long = X)
# Bind county centroids to Florida data
FL_16@data <- cbind(FL_16@data, centroid)
# Data types
sapply(FL_16@data, typeof)
FL_16@data$county <- as.factor(FL_16@data$county)
df_FL <- FL_16@data
ev <- df_FL[["evictions"]]
runApp()
runApp()
df_FL_top <- df_FL %>%
arrange(desc(median_income)) %>%
top_n(10)
View(df_FL_top)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
colnames(df_FL)
runApp()
runApp()
runApp()
runApp()
runApp()
ggplotly(
ggplot(data = test) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100)) +
text(paste(county))
)
ggplotly(
ggplot(data = df_FL) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100)) +
text(paste(county))
)
View(df_FL)
# Plots
# scatterplot
ggplotly(
ggplot(data = df_FL) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100)) +
text(paste(county = median_gross_rent))
)
# Plots
# scatterplot
ggplotly(
ggplot(data = df_FL) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100)) +
text(paste(county = "median_gross_rent"))
)
# Plots
# scatterplot
ggplotly(
ggplot(data = df_FL) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100)) +
text(paste(county = rowname))
)
# Plots
# scatterplot
ggplotly(
ggplot(data = df_FL) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100)) +
text(paste(median_gross_rent))
)
# Plots
# scatterplot
ggplotly(
ggplot(data = df_FL) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100)) +
text(x = eviction_rate)
)
# Plots
# scatterplot
ggplotly(
ggplot(data = df_FL) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100)) +
text(x = "eviction_rate")
)
# Plots
# scatterplot
ggplotly(
ggplot(data = df_FL) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100)) +
text(x = ~eviction_rate)
)
ggplotly(
ggplot(data = df_FL) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100)) +
tooltip = c("county")
)
# Plots
# scatterplot
ggplotly(
ggplot(data = df_FL) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100)) +
tooltip = c("county")
)
require(rgdal)
require(leaflet)
require(leaflet.extras)
require(dplyr)
require(readxl)
require(stringr)
require(raptr)
require(PBSmapping)
require(ggplot2)
require(plotly)
library(knitr)
g <- ggplot(data = df_FL) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100, county = county))
g <- ggplot(data = df_FL, aes(county = county)) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100))
ggplotly(g, tooltip = c("county"))
ggplotly(
ggplot(data = df_FL, aes(county = county)) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100)),
tooltip = c("county")
)
runApp()
runApp()
runApp()
runApp()
# nicely formatted summary stats
t <- data.frame(unclass(summary(test$evic_filing_rate)))
# nicely formatted summary stats
t <- data.frame(unclass(summary(df_FL$evic_filing_rate)))
View(t)
# nicely formatted summary stats
t <- round(data.frame(unclass(summary(df_FL$evic_filing_rate))), 3)
View(t)
colnames(t) <- c("evic_filing_rate")
View(t)
runApp()
runApp()
runApp()
runApp()
View(t)
runApp()
?fitBounds
library(shiny)
# Load packages
require(rgdal)
require(leaflet)
require(leaflet.extras)
require(dplyr)
require(readxl)
require(stringr)
require(raptr)
require(PBSmapping)
library(ggplot2)
library(plotly)
?fitBounds
runApp()
runApp()
geom_boxplot()
?geom_boxplot
# Load FL eviction data. Source: https://data-downloads.evictionlab.org/
FL_counties <- readOGR("FL_eviction_counties.geojson")
#View(FL_counties@data)
FL_16 <- FL_counties
# Load FL eviction data. Source: https://data-downloads.evictionlab.org/
FL_counties <- readOGR("FL_eviction_counties.geojson")
#View(FL_counties@data)
FL_16 <- FL_counties
# Select only 2016 data and rename columns
FL_16@data <- FL_counties@data %>%
dplyr::select(GEOID, west, east, north, south, n, pl, ends_with("16")) %>%
rename(county = n, state = pl)
#View(FL_16@data)
colnames(FL_16@data) <- c("GEOID", "west", "east", "north", "south", "county", "state",
"population", "poverty_rate", "renter_occ_households", "pct_renter",
"median_gross_rent", "median_income", "median_property_val",
"rent_burden", "pct_white", "pct_af_am", "pct_hispanic", "pct_am_ind",
"pct_asian", "pct_nh", "pct_multiple", "pct_other",
"eviction_filings", "evictions", "eviction_rate", "evic_filing_rate",
"low_flag", "imputed", "sub")
# Add lat and long to the dataset
# Calculate centroids of counties to find lat and long
FL_polyset <- SpatialPolygons2PolySet(x = FL_16)
centroid <- calcCentroid(FL_polyset, rollup = 1) %>%
rename(lat = Y, long = X)
# Bind county centroids to Florida data
FL_16@data <- cbind(FL_16@data, centroid)
View(FL_16@data)
# Data types
sapply(FL_16@data, typeof)
lat and long
FL_polyset <- SpatialPolygons2PolySet(x = FL_16)
centroid <- calcCentroid(FL_polyset, rollup = 1) %>%
rename(lat = Y, long = X)
# Bind county centroids to Florida data
FL_16@data <- cbind(FL_16@data, centroid)
View(FL_16@data)
# Data types
sapply(FL_16@data, typeof)
FL_16@data$county <-
FL_16@data$county <- as.factor(FL_16@data$county)
df_FL <- FL_16@data
attach(mpg)
ggplot(mpg) +
geom_boxplot(aes(x = class, y = hwy))
ggplot(data = df_FL) +
geom_boxplot(aes(y = population))
ggplot(data = df_FL) +
geom_boxplot(aes(x = county = population))
ggplot(data = df_FL) +
geom_boxplot(aes(x = county, y= population))
View(df_FL)
# Load FL eviction data. Source: https://data-downloads.evictionlab.org/
FL_counties <- readOGR("FL_eviction_counties.geojson")
ggplot(data = df_FL) +
geom_boxplot(aes(x = county, y= population))
?geom_boxplot
ggplot(df_FL, aes(y = median_income)) +
geom_boxplot()
ggplot(df_FL) +
geom_point(aes(x = median_gross_rent, y = eviction_rate))
# Plots
# scatterplot
ggplotly(
ggplot(data = df_FL, aes(county = county)) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100)),
tooltip = c("county")
)
# Load packages
require(rgdal)
require(leaflet)
require(leaflet.extras)
require(dplyr)
require(readxl)
require(stringr)
require(raptr)
require(PBSmapping)
require(ggplot2)
require(plotly)
ggplot(data = df_FL)
ggplot(data = df_FL) + geom_point(aes(x = pct_renter, y = median_income))
rlang::last_error()
ggplot(data = df_FL)
colnames(df_FL)
plot(x = df_FL$population, y = df_FL$median_gross_rent)
ggplot(data = df_FL) + geom_point(mapping = aes(x = population, y = evictions))
rm(list = ls())
# Load packages
require(rgdal)
# Load packages
require(rgdal)
require(leaflet)
require(leaflet.extras)
require(dplyr)
require(readxl)
require(stringr)
require(raptr)
require(PBSmapping)
# Load packages
require(rgdal)
(rgdal)
# Load packages
require(rgdal)
require(leaflet)
require(leaflet.extras)
require(dplyr)
require(readxl)
require(stringr)
require(raptr)
require(PBSmapping)
require(ggplot2)
require(plotly)
library(knitr)
# Load FL eviction data. Source: https://data-downloads.evictionlab.org/
FL_counties <- readOGR("FL_eviction_counties.geojson")
#View(FL_counties@data)
FL_16 <- FL_counties
# Select only 2016 data and rename columns
FL_16@data <- FL_counties@data %>%
dplyr::select(GEOID, west, east, north, south, n, pl, ends_with("16")) %>%
rename(county = n, state = pl)
#View(FL_16@data)
colnames(FL_16@data) <- c("GEOID", "west", "east", "north", "south", "county", "state",
"population", "poverty_rate", "renter_occ_households", "pct_renter",
"median_gross_rent", "median_income", "median_property_val",
"rent_burden", "pct_white", "pct_af_am", "pct_hispanic", "pct_am_ind",
"pct_asian", "pct_nh", "pct_multiple", "pct_other",
"eviction_filings", "evictions", "eviction_rate", "evic_filing_rate",
"low_flag", "imputed", "sub")
# Add lat and long to the dataset
# Calculate centroids of counties to find lat and long
FL_polyset <- SpatialPolygons2PolySet(x = FL_16)
centroid <- calcCentroid(FL_polyset, rollup = 1) %>%
rename(lat = Y, long = X)
# Bind county centroids to Florida data
FL_16@data <- cbind(FL_16@data, centroid)
# Plots
# scatterplot
ggplotly(
ggplot(data = df_FL, aes(county = county)) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100)),
tooltip = c("county")
)
FL_16@data$county <- as.factor(FL_16@data$county)
df_FL <- FL_16@data
# Plots
# scatterplot
ggplotly(
ggplot(data = df_FL, aes(county = county)) +
geom_point(aes(x = median_gross_rent, y = eviction_rate/100)),
tooltip = c("county")
)
ggplot(df_FL) +
geom_point(aes(x = median_gross_rent, y = eviction_rate))
ggplot(df_FL) +
geom_boxplot(aes(y = eviction_rate))
ggplot(df_FL) +
geom_boxplot(aes(y = population))
ggplotly(
ggplot(mpg) +
geom_boxplot(aes(x = class, y = hwy))
)
ggplotly(
ggplot(df_FL) +
geom_boxplot(aes(y = population))
)
ggplotly(
ggplot(df_FL) +
geom_boxplot(aes(y = population)) +
coord_flip()
)
ggplotly(
ggplot(df_FL) +
geom_boxplot(aes(x = population)) +
coord_flip()
)
ggplotly(
ggplot(df_FL) +
geom_boxplot(aes(x = population)) +
coord_flip()
)
ggplotly(
ggplot(df_FL) +
geom_boxplot(aes(y = population)) +
coord_flip()
)
ggplotly(
ggplot(df_FL) +
geom_boxplot(aes(y = population))
)
